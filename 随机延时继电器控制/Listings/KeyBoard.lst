C51 COMPILER V9.60.0.0   KEYBOARD                                                          05/08/2020 23:04:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\KeyBoard.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE KeyBoard.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\KeyBoard
                    -.lst) TABS(2) OBJECT(.\Objects\KeyBoard.obj)

line level    source

   1          
   2          
   3          #include <STC8.H>
   4          
   5          #include "keyBoard.h"
   6          
   7          //#define Matrix
   8          
   9          void delay2ms(void)   //延时函数
  10          {
  11   1          unsigned char i,j;
  12   1          for(i=133; i>0; i--)
  13   1              for(j=6; j>0; j--);
  14   1      }
  15          //#define MatrixKeyboard P2
  16          #ifdef Matrix
              //sbit matkey1=P1^0;
              //sbit matkey2=P1^1;
              //sbit matkey3=P5^2;
              //sbit matkey4=P0^4;
              //sbit matkey5=P0^3;
              //sbit matkey6=P0^2;
              //sbit matkey7=P0^1;
              //sbit matkey8=P1^7;
              sbit matkey1=P1^0;
              sbit matkey2=P1^1;
              sbit matkey3=P1^2;
              sbit matkey4=P1^3;
              sbit matkey5=P1^4;
              sbit matkey6=P1^5;
              sbit matkey7=P1^6;
              sbit matkey8=P1^7;
              
              void SetMatKeyData(char ndata)
              {
                  matkey1=(ndata&0x01)!=0;
                  matkey2=(ndata&0x02)!=0;
                  matkey3=(ndata&0x04)!=0;
                  matkey4=(ndata&0x08)!=0;
                  matkey5=(ndata&0x10)!=0;
                  matkey6=(ndata&0x20)!=0;
                  matkey7=(ndata&0x40)!=0;
                  matkey8=(ndata&0x80)!=0;
              }
              char getMatKeyData()
              {
                  char ndata=0;
                  ndata|=matkey1!=0?0x01:0;
                  ndata|=matkey2!=0?0x02:0;
                  ndata|=matkey3!=0?0x04:0;
                  ndata|=matkey4!=0?0x08:0;
                  ndata|=matkey5!=0?0x10:0;
                  ndata|=matkey6!=0?0x20:0;
                  ndata|=matkey7!=0?0x40:0;
C51 COMPILER V9.60.0.0   KEYBOARD                                                          05/08/2020 23:04:04 PAGE 2   

                  ndata|=matkey8!=0?0x80:0;
                  return ndata;
              }
              unsigned char   GetMatrixKeyboard()
              {
                  unsigned char KeyValue;
              //用来存放读取到的键值
                  //MatrixKeyboard=0X0F;
                  SetMatKeyData(0X0F);
                  delay2ms();
                  switch(getMatKeyData())
                  {
                  case(0X07):
                      KeyValue=0;
                      break;
                  case(0X0b):
                      KeyValue=4;
                      break;
                  case(0X0d):
                      KeyValue=8;
                      break;
                  case(0X0e):
                      KeyValue=12;
                      break;
                  default:
                      KeyValue=17;  //检测出错回复17意思是把数码管全灭掉。
                      return  KeyValue;
                      break;
                  }
                  //测试行
                  //MatrixKeyboard=0XF0;
                  SetMatKeyData(0xF0);
                  delay2ms();
                  switch(getMatKeyData())
                  {
                  case(0X70):
                      KeyValue=0+KeyValue;
                      break;
                  case(0Xb0):
                      KeyValue=1+KeyValue;
                      break;
                  case(0Xd0):
                      KeyValue=2+KeyValue;
                      break;
                  case(0Xe0):
                      KeyValue=3+KeyValue;
                      break;
                      break;
                  default:
                      KeyValue=17;
                      return  KeyValue;
                      break;
                  }
                  return KeyValue;
              }
              #endif
 111          
 112          sbit Key1=P5^5;
 113          sbit Key2=P3^0;
 114          sbit Key3=P3^1;
 115          unsigned char IndependentKeyboard()
 116          {
C51 COMPILER V9.60.0.0   KEYBOARD                                                          05/08/2020 23:04:04 PAGE 3   

 117   1          unsigned char keyValue=0;
 118   1          keyValue=Key3==0;
 119   1          keyValue<<=1;
 120   1          keyValue|=Key2==0;
 121   1          keyValue<<=1;
 122   1          keyValue|=Key1==0;
 123   1          return keyValue;
 124   1      }
 125          void InitKeyboard()
 126          {
 127   1          P5M1 &=~(0x20);
 128   1          P5M0 &=~(0x20);
 129   1          P3M1&=~(0x03);
 130   1          P3M0&=~(0x03);
 131   1          Key1=1;
 132   1          Key2=1;
 133   1          Key3=1;
 134   1      }
 135          //按键检测
 136          unsigned char key_scan(KeyStruct* KeyNum)
 137          {
 138   1          unsigned char keyValue=0;
 139   1          unsigned char State=KeyNum->State;
 140   1          unsigned char KeyTemp=KeyNum->Value;
 141   1          /*******矩阵键盘读取操作******/
 142   1          keyValue =  IndependentKeyboard();//独立按键检测
 143   1          //keyValue==0表示没有按键按下
 144   1          /*******矩阵键盘读取操作***/
 145   1          //keyValue=GetMatrixKeyboard();
 146   1          /*  keyValue==17表示没有按键按下
 147   1          如果变更键盘注意修改 CheckKey分支判断条件
 148   1          *************************/
 149   1          switch(State)
 150   1          {
 151   2          case CheckKey:
 152   2              if (keyValue == 0)
 153   2              {
 154   3                  break;
 155   3              }
 156   2              KeyTemp = keyValue;
 157   2              State = DelayKey;
 158   2          case DelayKey:
 159   2              delay2ms();
 160   2              State= KeyTemp==keyValue ? KeyFallEdge:CheckKey;
 161   2              break;
 162   2          case KeyFallEdge:
 163   2              State=KeyDown;
 164   2              break;
 165   2          case KeyDown:
 166   2              if(KeyTemp != keyValue)
 167   2              {
 168   3                  State=KeyRisEdge;
 169   3                  KeyNum->lastValue= KeyTemp;
 170   3              }
 171   2              break;
 172   2          case KeyRisEdge:
 173   2              State=CheckKey;
 174   2              break;
 175   2          default:
 176   2              break;
 177   2          }
 178   1          KeyNum->State=State;
C51 COMPILER V9.60.0.0   KEYBOARD                                                          05/08/2020 23:04:04 PAGE 4   

 179   1          KeyNum->Value=keyValue;
 180   1          return State;
 181   1      }
 182          //char keynumtoASCII(char keynum)
 183          //{
 184          //    char keyval=0;
 185          //    char code keyASCII[17]="123E456O789L0.SQ!";
 186          //    keyval=keyASCII[keynum];
 187          //    /*switch(keynum)
 188          //    {
 189          //    case 00:keyval='1':break;
 190          //    case 01:keyval='2':break;
 191          //    case 02:keyval='3':break;
 192          //    case 03:keyval='E':break;
 193          //    case 04:keyval='4':break;
 194          //    case 05:keyval='5':break;
 195          //    case 06:keyval='6':break;
 196          //    case 07:keyval='O':break;
 197          //    case 08:keyval='7':break;
 198          //    case 09:keyval='8':break;
 199          //    case 10:keyval='9':break;
 200          //    case 11:keyval='L':break;
 201          //    case 12:keyval='0':break;
 202          //    case 13:keyval='.':break;
 203          //    case 14:keyval='S':break;
 204          //      case 15:keyval='Q':break;
 205          //      default:break;
 206          //    }*/
 207          
 208          //    return keyval;
 209          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
