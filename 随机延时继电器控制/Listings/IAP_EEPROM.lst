C51 COMPILER V9.60.0.0   IAP_EEPROM                                                        05/08/2020 23:04:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IAP_EEPROM
OBJECT MODULE PLACED IN .\Objects\IAP_EEPROM.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE IAP_EEPROM.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\IAP_EE
                    -PROM.lst) TABS(2) OBJECT(.\Objects\IAP_EEPROM.obj)

line level    source

   1          
   2          #include <STC8.H>
   3          
   4          #include "IAP_EEPROM.h"
   5          
   6          
   7          #define WT_30M          0x80
   8          #define WT_24M          0x81
   9          #define WT_20M          0x82
  10          #define WT_12M          0x83
  11          #define WT_6M           0x84
  12          #define WT_3M           0x85
  13          #define WT_2M           0x86
  14          #define WT_1M           0x87
  15          void IapIdle()
  16          {
  17   1          IAP_CONTR = 0;                              //关闭IAP功能
  18   1          IAP_CMD = 0;                                //清除命令寄存器
  19   1          IAP_TRIG = 0;                               //清除触发寄存器
  20   1          IAP_ADDRH = 0x80;                           //将地址设置到非IAP区域
  21   1          IAP_ADDRL = 0;
  22   1      }
  23          
  24          char IapRead(int addr)
  25          {
  26   1          char dat;
  27   1          IAP_CONTR = WT_12M;    //使能IAP
  28   1          //  IAP_TPS=13;
  29   1          IAP_CMD   = 1;                   //设置IAP读命令
  30   1          IAP_ADDRL = addr;                //设置IAP低地址
  31   1          IAP_ADDRH = addr >> 8;           //设置IAP高地址
  32   1          IAP_TRIG  = 0x5a;                //写触发命令(0x5a)
  33   1          IAP_TRIG  = 0xa5;                //写触发命令(0xa5)
  34   1          _nop_();                         //稍稍等待一下
  35   1          dat       = IAP_DATA;            //读IAP数据
  36   1          IapIdle();                                  //关闭IAP功能
  37   1          return dat; // 使用 MOVC 读取数据
  38   1      }
  39          
  40          void IapProgram(int addr, char dat)
  41          {
  42   1          IAP_CONTR =  WT_12M;                         //使能IAP
  43   1          //  IAP_TPS= 12;//擦除参数
  44   1          IAP_CMD = 2;                                //设置IAP写命令
  45   1          IAP_ADDRL = addr;                           //设置IAP低地址
  46   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  47   1          IAP_DATA = dat;                             //写IAP数据
  48   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  49   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  50   1          _nop_();
  51   1          IapIdle();                                  //关闭IAP功能
  52   1      }
  53          
  54          void IapErase(int addr)
C51 COMPILER V9.60.0.0   IAP_EEPROM                                                        05/08/2020 23:04:03 PAGE 2   

  55          {
  56   1          IAP_CONTR =  WT_12M;                         //使能IAP
  57   1          //  IAP_TPS= 13;//擦除参数
  58   1          IAP_CMD = 3;                                //设置IAP擦除命令
  59   1          IAP_ADDRL = addr;                           //设置IAP低地址
  60   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  61   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  62   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  63   1          _nop_();                                    //
  64   1          IapIdle();                                  //关闭IAP功能
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     83    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
